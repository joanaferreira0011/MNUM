import math
import scipy.integrate as integrate

def f(x):
  return math.sin(x)/x**2


def integrate_trapeze(x0, x1, n):
  integral = 0
  i=0
  a = (x1-x0)/n
  while(i< n):
    integral += (f(x0)+f(x0+a))*a/2
    x0 += a
    i +=1
  return integral


def integrate_trapeze_simplify(x0, x1, h):
  integral = 0
  xi = x0+ h
  while xi < x1:
    integral += f(xi)
    xi += h
  integral = (2*integral + f(x0)+f(x1))* h/2
  return integral



def integrate_simpson(x0, x1, h):
    integral = 0
    xi = x0+ h
    i =2
    while xi < x1:
        if (i%2==0):
            integral += 4*f(xi)
        else:
            integral += 2*f(xi)
        xi += h
        i +=1
    integral = (integral + f(x0)+f(x1))* h/3
    return integral




#result = integrate.quad(lambda x: f(x), 0, math.acos(-1))
#print(result)

print("Trapeze simplify: %s " % integrate_trapeze_simplify(math.acos(-1)/2,math.acos(-1) , math.acos(-1)/8 ))
print("Trapeze: %s" % integrate_trapeze(math.acos(-1)/2,math.acos(-1), 2 ))
print("Simpson: %s " % integrate_simpson(math.acos(-1)/2,math.acos(-1) , math.acos(-1)/8 ))
